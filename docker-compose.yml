version: '2'

services:
  mongo:
    image: mongo:3.4-jessie
    ports:
      - 27017:27017
    expose:
      - 27017
    container_name: mongo
    network_mode: "host"
    hostname: 127.0.0.1
    volumes:
      - '/home/mysql/data:/data'

#  mysql:
#    image: mysql:latest
#    restart: always
##    container_name: mysql
#    network_mode: "host"
#    hostname: localhost
#    environment:
#      MYSQL_ROOT_PASSWORD: root123
#      MYSQL_DATABASE: RegisterDB
#      MYSQL_PASSWORD: root123
#    ports:
#      - 3306:3306

  eureka-server:
    build: eureka-server/
    restart: always
    network_mode: "host"
    hostname: localhost
    ports:
      - 8761:8761

  config-service:
    build: config-server/
    restart: always
    network_mode: "host"
    image: demo-config-service
    hostname: localhost
    ports:
      - 8888:8888

  zuul-apigateway:
    build: zuul-api/
    depends_on:
      - config-service
      - eureka-server
    restart: always
    network_mode: "host"
    hostname: localhost
    ports:
      - 8080:8080
  zookeeper:
    container_name: zookeeper
    image: zookeeper:latest
    restart: always
    ports:
      - 2181:2181
    expose:
      - 2181
    network_mode: "host"
    hostname: 127.0.0.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000000000


  kafka:
    container_name: kafka
    image: wurstmeister/kafka:latest
    restart: always
    mem_limit: 2000000000
    ports:
      - 9092:9092
    expose:
      - 9092
    depends_on:
      - zookeeper
    network_mode: host
    hostname: 127.0.0.1
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: localhost:2181
      KAFKA_MESSAGE_MAX_BYTES: 1000000000
      #     KAFKA_CREATE_TOPICS: “Topic1:1:3,Topic2:1:1:compact”
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'

  manual-answer:
    build: manual-answer-service/
    restart: always
    network_mode: "host"
    image: manual-answer-service
    hostname: localhost
    ports:
      - 8091:8091
    depends_on:
      - mongo
      - kafka


#  user-registration:
#      build: user-registration/
#      restart: always
#      network_mode: "host"
#      image: user-registration
#      hostname: localhost
#      ports:
#        - 8081:8081
#      depends_on:
#        - mysql

  oraclefrontend:
    build: oracle-frontend/
    image: oracle-frontend:latest
    container_name: oracle-frontend
    network_mode: "host"
    hostname: localhost
    ports:
      - 4200:4200
    restart: always

  botservice:
    build: BotService/
    restart: always
    network_mode: "host"
    hostname: localhost
    ports:
      - 8090:8090
    depends_on:
      - kafka
      - zookeeper
